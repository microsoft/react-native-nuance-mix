// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nuance_asr_resource.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ASRResourceReference;
@class ASRWakeupWord;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ASREnumResourceType

/**
 *
 * Input field defining the content type of a recognition resource: a domain LM, wordset (plain text or compiled) or speaker profile. Included in [ResourceReference](#resourcereference). See [Resources](#resources).
 **/
typedef GPB_ENUM(ASREnumResourceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ASREnumResourceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Resource type is not specified. Client must always specify a type. */
  ASREnumResourceType_UndefinedResourceType = 0,

  /** Resource is a plain-text JSON wordset, provided inline or referenced as a file. */
  ASREnumResourceType_Wordset = 1,

  /** Resource is a compiled wordset zip file. */
  ASREnumResourceType_CompiledWordset = 2,

  /** Resource is a domain LM zip file. */
  ASREnumResourceType_DomainLm = 3,

  /** Resource is a speaker profile defined in a Minio endpoint. */
  ASREnumResourceType_SpeakerProfile = 4,

  /** Resource is a SRGS XML file. */
  ASREnumResourceType_Grammar = 5,

  /** Resource is ASR settings metadata. */
  ASREnumResourceType_Settings = 6,
};

GPBEnumDescriptor *ASREnumResourceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ASREnumResourceType_IsValidValue(int32_t value);

#pragma mark - Enum ASREnumResourceReuse

/**
 *
 * Input field specifying whether the domain LMs or wordset will be used for one or many recognition turns. Included in [RecognitionResource](#recognitionresource).
 **/
typedef GPB_ENUM(ASREnumResourceReuse) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ASREnumResourceReuse_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Not specified: currently defaults to LOW_REUSE. */
  ASREnumResourceReuse_UndefinedReuse = 0,

  /** The resource will be used for only one recognition turn. */
  ASREnumResourceReuse_LowReuse = 1,

  /** The resource will be used for a sequence of recognition turns. */
  ASREnumResourceReuse_HighReuse = 5,
};

GPBEnumDescriptor *ASREnumResourceReuse_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ASREnumResourceReuse_IsValidValue(int32_t value);

#pragma mark - Enum ASREnumWeight

/**
 *
 * Input field setting the relative weight of the domain LM to the data pack, as a keyword. Included in [RecognitionResource](#recognitionresource). Wordsets and speaker profiles do not have a weight. See also weight_value to specify a numeric value.
 **/
typedef GPB_ENUM(ASREnumWeight) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ASREnumWeight_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Same effect as MEDIUM */
  ASREnumWeight_DefaultWeight = 0,

  /** The DLM has less effect than the data pack. */
  ASREnumWeight_Lowest = 1,
  ASREnumWeight_Low = 2,

  /** The DLM has roughly an equal effect compared to the data pack. */
  ASREnumWeight_Medium = 3,
  ASREnumWeight_High = 4,

  /** The DLM has more effect than the data pack. */
  ASREnumWeight_Highest = 5,
};

GPBEnumDescriptor *ASREnumWeight_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ASREnumWeight_IsValidValue(int32_t value);

#pragma mark - ASRNuanceAsrResourceRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ASRNuanceAsrResourceRoot : GPBRootObject
@end

#pragma mark - ASRRecognitionResource

typedef GPB_ENUM(ASRRecognitionResource_FieldNumber) {
  ASRRecognitionResource_FieldNumber_ExternalReference = 1,
  ASRRecognitionResource_FieldNumber_InlineWordset = 2,
  ASRRecognitionResource_FieldNumber_Builtin = 3,
  ASRRecognitionResource_FieldNumber_InlineGrammar = 4,
  ASRRecognitionResource_FieldNumber_WeightEnum = 5,
  ASRRecognitionResource_FieldNumber_WeightValue = 6,
  ASRRecognitionResource_FieldNumber_Reuse = 7,
  ASRRecognitionResource_FieldNumber_WakeupWord = 8,
};

typedef GPB_ENUM(ASRRecognitionResource_ResourceUnion_OneOfCase) {
  ASRRecognitionResource_ResourceUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRRecognitionResource_ResourceUnion_OneOfCase_ExternalReference = 1,
  ASRRecognitionResource_ResourceUnion_OneOfCase_InlineWordset = 2,
  ASRRecognitionResource_ResourceUnion_OneOfCase_Builtin = 3,
  ASRRecognitionResource_ResourceUnion_OneOfCase_InlineGrammar = 4,
  ASRRecognitionResource_ResourceUnion_OneOfCase_WakeupWord = 8,
};

typedef GPB_ENUM(ASRRecognitionResource_WeightUnion_OneOfCase) {
  ASRRecognitionResource_WeightUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRRecognitionResource_WeightUnion_OneOfCase_WeightEnum = 5,
  ASRRecognitionResource_WeightUnion_OneOfCase_WeightValue = 6,
};

/**
 *
 * Input message defining one or more recognition resources (domain LMs, wordsets, speaker profiles, builtins) to improve recognition.  Included in [RecognitionInitMessage](#recognitioninitmessage). Domain LMs and speaker profiles must be external references but wordsets may also be provided inline.
 **/
GPB_FINAL @interface ASRRecognitionResource : GPBMessage

@property(nonatomic, readonly) ASRRecognitionResource_ResourceUnion_OneOfCase resourceUnionOneOfCase;

/** The resource is an external file. Mandatory for DLMs and speaker profiles. */
@property(nonatomic, readwrite, strong, null_resettable) ASRResourceReference *externalReference;

/** Inline wordset JSON resource. See [Wordsets](#wordsets) for the format. Default blank, meaning no inline wordset. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inlineWordset;

/** Name of a builtin resource in the data pack. Default blank, meaning no builtins. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *builtin;

/** Inline grammar, SRGS XML format. Default blank, meaning no inline grammar. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *inlineGrammar;

/** List of Wakeup word(s). */
@property(nonatomic, readwrite, strong, null_resettable) ASRWakeupWord *wakeupWord;

@property(nonatomic, readonly) ASRRecognitionResource_WeightUnion_OneOfCase weightUnionOneOfCase;

/** Keyword for weight of DLM relative to data pack. Default MEDIUM. */
@property(nonatomic, readwrite) ASREnumWeight weightEnum;

/** Weight of DLM relative to data pack as value from 0 to 1. Default 0. */
@property(nonatomic, readwrite) float weightValue;

/** Whether the resource will be used multiple times. Default LOW_REUSE. */
@property(nonatomic, readwrite) ASREnumResourceReuse reuse;

@end

/**
 * Fetches the raw value of a @c ASRRecognitionResource's @c weightEnum property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ASRRecognitionResource_WeightEnum_RawValue(ASRRecognitionResource *message);
/**
 * Sets the raw value of an @c ASRRecognitionResource's @c weightEnum property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetASRRecognitionResource_WeightEnum_RawValue(ASRRecognitionResource *message, int32_t value);

/**
 * Fetches the raw value of a @c ASRRecognitionResource's @c reuse property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ASRRecognitionResource_Reuse_RawValue(ASRRecognitionResource *message);
/**
 * Sets the raw value of an @c ASRRecognitionResource's @c reuse property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetASRRecognitionResource_Reuse_RawValue(ASRRecognitionResource *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'resourceUnion'.
 **/
void ASRRecognitionResource_ClearResourceUnionOneOfCase(ASRRecognitionResource *message);
/**
 * Clears whatever value was set for the oneof 'weightUnion'.
 **/
void ASRRecognitionResource_ClearWeightUnionOneOfCase(ASRRecognitionResource *message);

#pragma mark - ASRResourceReference

typedef GPB_ENUM(ASRResourceReference_FieldNumber) {
  ASRResourceReference_FieldNumber_Type = 1,
  ASRResourceReference_FieldNumber_Uri = 2,
  ASRResourceReference_FieldNumber_MaskLoadFailures = 3,
  ASRResourceReference_FieldNumber_RequestTimeoutMs = 7,
  ASRResourceReference_FieldNumber_Headers = 8,
};

/**
 *
 * Input message for fetching an external recognition resource. Included in [RecognitionResource](#recognitionresource). See [Resources](#resources). For Nuance-hosted Krypton, the uri for DLMs is a URN, e.g. urn:nuance:mix/eng-USA/A2_C70/mix.asr.
 **/
GPB_FINAL @interface ASRResourceReference : GPBMessage

/** Resource type. Default UNDEFINED_RESOURCE_TYPE. */
@property(nonatomic, readwrite) ASREnumResourceType type;

/** Location of the resource as a URN reference. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *uri;

/** When true, errors loading wordset pkg are not reflected in the Status message and do not terminate recognition. They are still reflected in logs. */
@property(nonatomic, readwrite) BOOL maskLoadFailures;

/** Time to wait when downloading resources. Default (0) means server default, usually 10000ms or 10 seconds. */
@property(nonatomic, readwrite) uint32_t requestTimeoutMs;

/** Optional header name, value pairs. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *headers;
/** The number of items in @c headers without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger headers_Count;

@end

/**
 * Fetches the raw value of a @c ASRResourceReference's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ASRResourceReference_Type_RawValue(ASRResourceReference *message);
/**
 * Sets the raw value of an @c ASRResourceReference's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetASRResourceReference_Type_RawValue(ASRResourceReference *message, int32_t value);

#pragma mark - ASRWakeupWord

typedef GPB_ENUM(ASRWakeupWord_FieldNumber) {
  ASRWakeupWord_FieldNumber_WordsArray = 1,
};

GPB_FINAL @interface ASRWakeupWord : GPBMessage

/** Wakeup word(s). Each entry must be distinct. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *wordsArray;
/** The number of items in @c wordsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger wordsArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
