// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nuance_asr.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ASRALaw;
@class ASRAudioFormat;
@class ASRControlMessage;
@class ASRFormatting;
@class ASROggOpus;
@class ASROpus;
@class ASRPCM;
@class ASRRecognitionFlags;
@class ASRRecognitionInitMessage;
@class ASRRecognitionParameters;
@class ASRRecognitionResource;
@class ASRResult;
@class ASRStartOfSpeech;
@class ASRStartTimersControlMessage;
@class ASRStatus;
@class ASRULaw;
GPB_ENUM_FWD_DECLARE(ASREnumResultType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ASREnumUtteranceDetectionMode

/**
 *
 * Input field specifying how utterances should be detected and transcribed within the audio stream.  Included in [RecognitionParameters](#recognitionparameters). The default is SINGLE. When the detection mode is DISABLED, the recognition ends only when the client stops sending audio.
 **/
typedef GPB_ENUM(ASREnumUtteranceDetectionMode) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  ASREnumUtteranceDetectionMode_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Return recognition results for one utterance only, ignoring any trailing audio. Default. */
  ASREnumUtteranceDetectionMode_Single = 0,

  /** Return results for all utterances detected in the audio stream. */
  ASREnumUtteranceDetectionMode_Multiple = 1,

  /** Return recognition results for all audio provided by the client, without separating it into utterances. */
  ASREnumUtteranceDetectionMode_Disabled = 2,
};

GPBEnumDescriptor *ASREnumUtteranceDetectionMode_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ASREnumUtteranceDetectionMode_IsValidValue(int32_t value);

#pragma mark - ASRNuanceAsrRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ASRNuanceAsrRoot : GPBRootObject
@end

#pragma mark - ASRRecognitionRequest

typedef GPB_ENUM(ASRRecognitionRequest_FieldNumber) {
  ASRRecognitionRequest_FieldNumber_RecognitionInitMessage = 1,
  ASRRecognitionRequest_FieldNumber_ControlMessage = 2,
  ASRRecognitionRequest_FieldNumber_Audio = 3,
};

typedef GPB_ENUM(ASRRecognitionRequest_RequestUnion_OneOfCase) {
  ASRRecognitionRequest_RequestUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRRecognitionRequest_RequestUnion_OneOfCase_RecognitionInitMessage = 1,
  ASRRecognitionRequest_RequestUnion_OneOfCase_ControlMessage = 2,
  ASRRecognitionRequest_RequestUnion_OneOfCase_Audio = 3,
};

/**
 *
 * Input stream messages that request recognition, sent one at a time in a specific order. The first mandatory field sends recognition parameters and resources, the final field sends audio to be recognized. Included in [Recognizer](#recognizer) - Recognize service.
 **/
GPB_FINAL @interface ASRRecognitionRequest : GPBMessage

@property(nonatomic, readonly) ASRRecognitionRequest_RequestUnion_OneOfCase requestUnionOneOfCase;

/** Required first message in the RPC input stream, sends parameters and resources for recognition. */
@property(nonatomic, readwrite, strong, null_resettable) ASRRecognitionInitMessage *recognitionInitMessage;

/** Optional second message in the RPC input stream, for timer control. */
@property(nonatomic, readwrite, strong, null_resettable) ASRControlMessage *controlMessage;

/** Audio samples in the selected encoding for recognition. */
@property(nonatomic, readwrite, copy, null_resettable) NSData *audio;

@end

/**
 * Clears whatever value was set for the oneof 'requestUnion'.
 **/
void ASRRecognitionRequest_ClearRequestUnionOneOfCase(ASRRecognitionRequest *message);

#pragma mark - ASRRecognitionInitMessage

typedef GPB_ENUM(ASRRecognitionInitMessage_FieldNumber) {
  ASRRecognitionInitMessage_FieldNumber_Parameters = 1,
  ASRRecognitionInitMessage_FieldNumber_ResourcesArray = 2,
  ASRRecognitionInitMessage_FieldNumber_ClientData = 3,
  ASRRecognitionInitMessage_FieldNumber_UserId = 4,
};

/**
 *
 * Input message that initiates a new recognition turn. Included in [RecognitionRequest](#recognitionrequest).
 **/
GPB_FINAL @interface ASRRecognitionInitMessage : GPBMessage

/** Language, audio format, and other recognition parameters. */
@property(nonatomic, readwrite, strong, null_resettable) ASRRecognitionParameters *parameters;
/** Test to see if @c parameters has been set. */
@property(nonatomic, readwrite) BOOL hasParameters;

/** Repeated. Optional resources (DLMs, wordsets, builtins) to improve recognition. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ASRRecognitionResource*> *resourcesArray;
/** The number of items in @c resourcesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger resourcesArray_Count;

/** Repeated. Optional client-supplied key,value pairs to inject into the call log. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *clientData;
/** The number of items in @c clientData without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger clientData_Count;

/** user_id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - ASRRecognitionParameters

typedef GPB_ENUM(ASRRecognitionParameters_FieldNumber) {
  ASRRecognitionParameters_FieldNumber_Language = 1,
  ASRRecognitionParameters_FieldNumber_Topic = 2,
  ASRRecognitionParameters_FieldNumber_AudioFormat = 3,
  ASRRecognitionParameters_FieldNumber_UtteranceDetectionMode = 4,
  ASRRecognitionParameters_FieldNumber_ResultType = 5,
  ASRRecognitionParameters_FieldNumber_RecognitionFlags = 6,
  ASRRecognitionParameters_FieldNumber_NoInputTimeoutMs = 7,
  ASRRecognitionParameters_FieldNumber_RecognitionTimeoutMs = 8,
  ASRRecognitionParameters_FieldNumber_UtteranceEndSilenceMs = 9,
  ASRRecognitionParameters_FieldNumber_SpeechDetectionSensitivity = 10,
  ASRRecognitionParameters_FieldNumber_MaxHypotheses = 11,
  ASRRecognitionParameters_FieldNumber_SpeechDomain = 15,
  ASRRecognitionParameters_FieldNumber_Formatting = 16,
};

typedef GPB_ENUM(ASRRecognitionParameters_OptionalSpeechDetectionSensitivity_OneOfCase) {
  ASRRecognitionParameters_OptionalSpeechDetectionSensitivity_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRRecognitionParameters_OptionalSpeechDetectionSensitivity_OneOfCase_SpeechDetectionSensitivity = 10,
};

/**
 *
 * Input message that defines parameters for the recognition process. Included in [RecognitionInitMessage](#recognitioninitmessage). The language parameter is required. All others are optional. See [Defaults](#defaults) for a list of default values.
 **/
GPB_FINAL @interface ASRRecognitionParameters : GPBMessage

/** Mandatory. Language and country (locale) code as xx-XX, e.g. en-US. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *language;

/** Specialized language model in data pack. Default is 'GEN' (generic). */
@property(nonatomic, readwrite, copy, null_resettable) NSString *topic;

/** Mandatory. Audio codec type and sample rate. */
@property(nonatomic, readwrite, strong, null_resettable) ASRAudioFormat *audioFormat;
/** Test to see if @c audioFormat has been set. */
@property(nonatomic, readwrite) BOOL hasAudioFormat;

/** How end of utterance is determined. Default SINGLE. */
@property(nonatomic, readwrite) ASREnumUtteranceDetectionMode utteranceDetectionMode;

/** The level of transcription results. Default FINAL. */
@property(nonatomic, readwrite) enum ASREnumResultType resultType;

/** Boolean recognition parameters. */
@property(nonatomic, readwrite, strong, null_resettable) ASRRecognitionFlags *recognitionFlags;
/** Test to see if @c recognitionFlags has been set. */
@property(nonatomic, readwrite) BOOL hasRecognitionFlags;

/** Maximum silence, in ms, allowed while wating for user input after recognition timers are started. Default (0) means server default, usually no timeout. */
@property(nonatomic, readwrite) uint32_t noInputTimeoutMs;

/** Maximum duration, in ms, of recognition turn. Default (0) means means server default, usually no timeout. */
@property(nonatomic, readwrite) uint32_t recognitionTimeoutMs;

/** Minimum silence, in ms, that determines the end of an utterance. Default (0) means server default, usually 500ms or half a second. */
@property(nonatomic, readwrite) uint32_t utteranceEndSilenceMs;

@property(nonatomic, readonly) ASRRecognitionParameters_OptionalSpeechDetectionSensitivity_OneOfCase optionalSpeechDetectionSensitivityOneOfCase;

/** A balance between detecting speech and noise (breathing, etc.), 0 to 1. 0 means ignore all noise, 1 means interpret all noise as speech. Default is 0.5. */
@property(nonatomic, readwrite) float speechDetectionSensitivity;

/** Maximum number of n-best hypotheses to return. Default (0) means a server default. */
@property(nonatomic, readwrite) uint32_t maxHypotheses;

/** Mapping to internal weight sets for language models in the data pack. Values depend on the data pack. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *speechDomain;

/** Formatting keyword. */
@property(nonatomic, readwrite, strong, null_resettable) ASRFormatting *formatting;
/** Test to see if @c formatting has been set. */
@property(nonatomic, readwrite) BOOL hasFormatting;

@end

/**
 * Fetches the raw value of a @c ASRRecognitionParameters's @c utteranceDetectionMode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ASRRecognitionParameters_UtteranceDetectionMode_RawValue(ASRRecognitionParameters *message);
/**
 * Sets the raw value of an @c ASRRecognitionParameters's @c utteranceDetectionMode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetASRRecognitionParameters_UtteranceDetectionMode_RawValue(ASRRecognitionParameters *message, int32_t value);

/**
 * Fetches the raw value of a @c ASRRecognitionParameters's @c resultType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t ASRRecognitionParameters_ResultType_RawValue(ASRRecognitionParameters *message);
/**
 * Sets the raw value of an @c ASRRecognitionParameters's @c resultType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetASRRecognitionParameters_ResultType_RawValue(ASRRecognitionParameters *message, int32_t value);

/**
 * Clears whatever value was set for the oneof 'optionalSpeechDetectionSensitivity'.
 **/
void ASRRecognitionParameters_ClearOptionalSpeechDetectionSensitivityOneOfCase(ASRRecognitionParameters *message);

#pragma mark - ASRAudioFormat

typedef GPB_ENUM(ASRAudioFormat_FieldNumber) {
  ASRAudioFormat_FieldNumber_Pcm = 1,
  ASRAudioFormat_FieldNumber_Alaw = 2,
  ASRAudioFormat_FieldNumber_Ulaw = 3,
  ASRAudioFormat_FieldNumber_Opus = 4,
  ASRAudioFormat_FieldNumber_OggOpus = 5,
};

typedef GPB_ENUM(ASRAudioFormat_AudioFormatUnion_OneOfCase) {
  ASRAudioFormat_AudioFormatUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRAudioFormat_AudioFormatUnion_OneOfCase_Pcm = 1,
  ASRAudioFormat_AudioFormatUnion_OneOfCase_Alaw = 2,
  ASRAudioFormat_AudioFormatUnion_OneOfCase_Ulaw = 3,
  ASRAudioFormat_AudioFormatUnion_OneOfCase_Opus = 4,
  ASRAudioFormat_AudioFormatUnion_OneOfCase_OggOpus = 5,
};

/**
 *
 * Mandatory input message containing the audio format of the audio to transcribe. Included in [RecognitionParameters](#recognitionparameters).
 **/
GPB_FINAL @interface ASRAudioFormat : GPBMessage

@property(nonatomic, readonly) ASRAudioFormat_AudioFormatUnion_OneOfCase audioFormatUnionOneOfCase;

/** Signed 16-bit little endian PCM, 8kHz or 16kHz */
@property(nonatomic, readwrite, strong, null_resettable) ASRPCM *pcm;

/** G.711 A-law, 8kHz */
@property(nonatomic, readwrite, strong, null_resettable) ASRALaw *alaw;

/** G.711 Mu-law, 8kHz */
@property(nonatomic, readwrite, strong, null_resettable) ASRULaw *ulaw;

/** RFC6716 Opus, 8kHz or 16kHz */
@property(nonatomic, readwrite, strong, null_resettable) ASROpus *opus;

/** RFC7845 Opus, 8kHz or 16kHz */
@property(nonatomic, readwrite, strong, null_resettable) ASROggOpus *oggOpus;

@end

/**
 * Clears whatever value was set for the oneof 'audioFormatUnion'.
 **/
void ASRAudioFormat_ClearAudioFormatUnionOneOfCase(ASRAudioFormat *message);

#pragma mark - ASRPCM

typedef GPB_ENUM(ASRPCM_FieldNumber) {
  ASRPCM_FieldNumber_SampleRateHz = 1,
};

/**
 *
 * Input message defining PCM sample rate.
 **/
GPB_FINAL @interface ASRPCM : GPBMessage

/** Audio sample rate: 0, 8000, 16000. Default 0, meaning 8000. */
@property(nonatomic, readwrite) uint32_t sampleRateHz;

@end

#pragma mark - ASRALaw

/**
 *
 * Input message defining ALaw audio format. G.711 audio formats are set to 8kHz.
 **/
GPB_FINAL @interface ASRALaw : GPBMessage

@end

#pragma mark - ASRULaw

/**
 *
 * Input message defining ULaw audio format. G.711 audio formats are set to 8kHz.
 **/
GPB_FINAL @interface ASRULaw : GPBMessage

@end

#pragma mark - ASROpus

typedef GPB_ENUM(ASROpus_FieldNumber) {
  ASROpus_FieldNumber_DecodeRateHz = 1,
  ASROpus_FieldNumber_PreskipSamples = 2,
  ASROpus_FieldNumber_SourceRateHz = 3,
};

/**
 *
 * Input message defining Opus packet stream decoding parameters.
 **/
GPB_FINAL @interface ASROpus : GPBMessage

/** Decoder output rate: 0, 8000, 16000. Default 0, meaning 8000. */
@property(nonatomic, readwrite) uint32_t decodeRateHz;

/** Decoder 48KHz output samples to skip. */
@property(nonatomic, readwrite) uint32_t preskipSamples;

/** Optional: input source sample rate */
@property(nonatomic, readwrite) uint32_t sourceRateHz;

@end

#pragma mark - ASROggOpus

typedef GPB_ENUM(ASROggOpus_FieldNumber) {
  ASROggOpus_FieldNumber_DecodeRateHz = 1,
};

/**
 *
 * Input message defining Ogg-encapsulated Opus audio stream parameters.
 **/
GPB_FINAL @interface ASROggOpus : GPBMessage

/** Decoder output rate: 0, 8000, 16000. Default 0, meaning 8000. */
@property(nonatomic, readwrite) uint32_t decodeRateHz;

@end

#pragma mark - ASRRecognitionFlags

typedef GPB_ENUM(ASRRecognitionFlags_FieldNumber) {
  ASRRecognitionFlags_FieldNumber_AutoPunctuate = 1,
  ASRRecognitionFlags_FieldNumber_FilterProfanity = 2,
  ASRRecognitionFlags_FieldNumber_IncludeTokenization = 3,
  ASRRecognitionFlags_FieldNumber_StallTimers = 4,
  ASRRecognitionFlags_FieldNumber_DiscardSpeakerAdaptation = 5,
  ASRRecognitionFlags_FieldNumber_SuppressCallRecording = 6,
  ASRRecognitionFlags_FieldNumber_MaskLoadFailures = 7,
  ASRRecognitionFlags_FieldNumber_SuppressInitialCapitalization = 8,
  ASRRecognitionFlags_FieldNumber_AllowZeroBaseLmWeight = 9,
  ASRRecognitionFlags_FieldNumber_FilterWakeupWord = 10,
};

/**
 *
 * Input message containing boolean recognition parameters.  Included in [RecognitionParameters](#recognitionparameters). The default is false in all cases.
 **/
GPB_FINAL @interface ASRRecognitionFlags : GPBMessage

/** Whether to enable auto punctuation, if available for the language. */
@property(nonatomic, readwrite) BOOL autoPunctuate;

/** Whether to mask known profanities as *** in transcription, if available for the language. */
@property(nonatomic, readwrite) BOOL filterProfanity;

/** Whether to include tokenized recognition result. */
@property(nonatomic, readwrite) BOOL includeTokenization;

/** Whether to disable recognition timers. By default, timers start when recognition begins. */
@property(nonatomic, readwrite) BOOL stallTimers;

/** If speaker profiles are used, whether to discard updated speaker data. By default, data is stored. */
@property(nonatomic, readwrite) BOOL discardSpeakerAdaptation;

/** Whether to disable recording to Call Log Aggregator (CLAG). By default, call logs, metadata, and audio are collected by CLAG. Call recording may also be disabled at the server level, in which case this parameter has no effect. */
@property(nonatomic, readwrite) BOOL suppressCallRecording;

/** When true, errors loading external resources are not reflected in the Status message and do not terminate recognition. They are still reflected in logs. */
@property(nonatomic, readwrite) BOOL maskLoadFailures;

/** When true, the first word in a sentence is not automatically capitalized. */
@property(nonatomic, readwrite) BOOL suppressInitialCapitalization;

/** When true, custom resources (DLMs, wordsets, etc.) can use the entire weight space, disabling the base LM contribution. By default, the base LM uses at least 10% of the weight space. Even when true, words from base LM are still recognizable (with lower probability) */
@property(nonatomic, readwrite) BOOL allowZeroBaseLmWeight;

/** Whether to remove the wakeup word in the final result */
@property(nonatomic, readwrite) BOOL filterWakeupWord;

@end

#pragma mark - ASRFormatting

typedef GPB_ENUM(ASRFormatting_FieldNumber) {
  ASRFormatting_FieldNumber_Scheme = 1,
  ASRFormatting_FieldNumber_Options = 2,
};

/**
 *
 * Input message specifying how the transcription results are presented, using a keyword for a formatting type supported by the data pack.  Included in [RecognitionParameters](#recognitionparameters). See [Formatting](#formatting)
 **/
GPB_FINAL @interface ASRFormatting : GPBMessage

/** Keyword for a formatting type defined in the data pack. Default is data pack dependent. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *scheme;

/** Repeated. Optional key,value pairs to ??. */
@property(nonatomic, readwrite, strong, null_resettable) GPBStringBoolDictionary *options;
/** The number of items in @c options without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger options_Count;

@end

#pragma mark - ASRControlMessage

typedef GPB_ENUM(ASRControlMessage_FieldNumber) {
  ASRControlMessage_FieldNumber_StartTimersMessage = 1,
};

typedef GPB_ENUM(ASRControlMessage_ControlMessageUnion_OneOfCase) {
  ASRControlMessage_ControlMessageUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRControlMessage_ControlMessageUnion_OneOfCase_StartTimersMessage = 1,
};

/**
 *
 * Input message that starts the recognition no-input timer. Included in [RecognitionRequest](#recognitionrequest). This setting is only effective if timers were disabled in the recognition request.
 **/
GPB_FINAL @interface ASRControlMessage : GPBMessage

@property(nonatomic, readonly) ASRControlMessage_ControlMessageUnion_OneOfCase controlMessageUnionOneOfCase;

/** Starts the recognition no-input timer. */
@property(nonatomic, readwrite, strong, null_resettable) ASRStartTimersControlMessage *startTimersMessage;

@end

/**
 * Clears whatever value was set for the oneof 'controlMessageUnion'.
 **/
void ASRControlMessage_ClearControlMessageUnionOneOfCase(ASRControlMessage *message);

#pragma mark - ASRStartTimersControlMessage

/**
 *
 * Input message the client sends when starting the no-input timer. Included in [ControlMessage](#controlmessage).
 **/
GPB_FINAL @interface ASRStartTimersControlMessage : GPBMessage

@end

#pragma mark - ASRRecognitionResponse

typedef GPB_ENUM(ASRRecognitionResponse_FieldNumber) {
  ASRRecognitionResponse_FieldNumber_Status = 1,
  ASRRecognitionResponse_FieldNumber_StartOfSpeech = 2,
  ASRRecognitionResponse_FieldNumber_Result = 3,
};

typedef GPB_ENUM(ASRRecognitionResponse_ResponseUnion_OneOfCase) {
  ASRRecognitionResponse_ResponseUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  ASRRecognitionResponse_ResponseUnion_OneOfCase_Status = 1,
  ASRRecognitionResponse_ResponseUnion_OneOfCase_StartOfSpeech = 2,
  ASRRecognitionResponse_ResponseUnion_OneOfCase_Result = 3,
};

/**
 *
 * Output stream of messages in response to a recognize request. Included in [Recognizer](#recognizer) - Recognize service.
 **/
GPB_FINAL @interface ASRRecognitionResponse : GPBMessage

@property(nonatomic, readonly) ASRRecognitionResponse_ResponseUnion_OneOfCase responseUnionOneOfCase;

/** Always the first message returned, indicating whether recognition was initiated successfully. */
@property(nonatomic, readwrite, strong, null_resettable) ASRStatus *status;

/** When speech was detected. */
@property(nonatomic, readwrite, strong, null_resettable) ASRStartOfSpeech *startOfSpeech;

/** The partial or final recognition result. A series of partial results may preceed the final result. */
@property(nonatomic, readwrite, strong, null_resettable) ASRResult *result;

@end

/**
 * Clears whatever value was set for the oneof 'responseUnion'.
 **/
void ASRRecognitionResponse_ClearResponseUnionOneOfCase(ASRRecognitionResponse *message);

#pragma mark - ASRStatus

typedef GPB_ENUM(ASRStatus_FieldNumber) {
  ASRStatus_FieldNumber_Code = 1,
  ASRStatus_FieldNumber_Message = 2,
  ASRStatus_FieldNumber_Details = 3,
};

/**
 *
 * Output message indicating the status of the transcription. See [Status codes](#status-codes) for details about the codes. The message and details are developer-facing error messages in English. User-facing messages should be localized by the client based on the status code. Included in [RecognitionResponse](#recognitionresponse).
 **/
GPB_FINAL @interface ASRStatus : GPBMessage

/** HTTP-style return code: 100, 200, 4xx, or 5xx as appropriate. */
@property(nonatomic, readwrite) uint32_t code;

/** Brief description of the status. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** Longer description if available. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *details;

@end

#pragma mark - ASRStartOfSpeech

typedef GPB_ENUM(ASRStartOfSpeech_FieldNumber) {
  ASRStartOfSpeech_FieldNumber_FirstAudioToStartOfSpeechMs = 1,
};

/**
 *
 * Output message containing the start-of-speech message. Included in [RecognitionResponse](#recognitionresponse).
 **/
GPB_FINAL @interface ASRStartOfSpeech : GPBMessage

/** Offset from start of audio stream to start of speech detected. */
@property(nonatomic, readwrite) uint32_t firstAudioToStartOfSpeechMs;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
