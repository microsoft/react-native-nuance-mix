// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: status.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class FieldViolation;
@class HelpInfo;
@class LocalizedMessage;
@class RequestInfo;
@class RetryInfo;
@class StatusDetail;
GPB_ENUM_FWD_DECLARE(StatusCode);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - StatusRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface StatusRoot : GPBRootObject
@end

#pragma mark - Status

typedef GPB_ENUM(Status_FieldNumber) {
  Status_FieldNumber_StatusCode = 1,
  Status_FieldNumber_StatusSubCode = 2,
  Status_FieldNumber_HTTPTransCode = 3,
  Status_FieldNumber_RequestInfo = 4,
  Status_FieldNumber_StatusMessage = 5,
  Status_FieldNumber_HelpInfo = 6,
  Status_FieldNumber_FieldViolationsArray = 7,
  Status_FieldNumber_RetryInfo = 8,
  Status_FieldNumber_StatusDetailsArray = 9,
};

/**
 * Common status message. The status_code field is mandatory, all others
 * are optional.
 **/
GPB_FINAL @interface Status : GPBMessage

/** Mandatory. Status code, enum value from [nuance.rpc.StatusCodes]. */
@property(nonatomic, readwrite) enum StatusCode statusCode;

/** Optional. Application-specific status sub-code. */
@property(nonatomic, readwrite) int32_t statusSubCode;

/** Optional. HTTP status code for the transcoder, if applicable. */
@property(nonatomic, readwrite) int32_t HTTPTransCode;

/** Optional. Information about the original request. */
@property(nonatomic, readwrite, strong, null_resettable) RequestInfo *requestInfo;
/** Test to see if @c requestInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRequestInfo;

/** Optional. Message providing the details of this status. */
@property(nonatomic, readwrite, strong, null_resettable) LocalizedMessage *statusMessage;
/** Test to see if @c statusMessage has been set. */
@property(nonatomic, readwrite) BOOL hasStatusMessage;

/** Optional. Help message providing the possible user action(s). */
@property(nonatomic, readwrite, strong, null_resettable) HelpInfo *helpInfo;
/** Test to see if @c helpInfo has been set. */
@property(nonatomic, readwrite) BOOL hasHelpInfo;

/** Optional. Set of field violations. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<FieldViolation*> *fieldViolationsArray;
/** The number of items in @c fieldViolationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger fieldViolationsArray_Count;

/** Optional. Retry information, if offered. */
@property(nonatomic, readwrite, strong, null_resettable) RetryInfo *retryInfo;
/** Test to see if @c retryInfo has been set. */
@property(nonatomic, readwrite) BOOL hasRetryInfo;

/** Optional. Detailed status messages. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<StatusDetail*> *statusDetailsArray;
/** The number of items in @c statusDetailsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger statusDetailsArray_Count;

@end

/**
 * Fetches the raw value of a @c Status's @c statusCode property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Status_StatusCode_RawValue(Status *message);
/**
 * Sets the raw value of an @c Status's @c statusCode property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetStatus_StatusCode_RawValue(Status *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
