// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: result.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Interpretation;
@class MultiIntentInterpretation;
@class SingleIntentInterpretation;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ResultRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface ResultRoot : GPBRootObject
@end

#pragma mark - InterpretResult

typedef GPB_ENUM(InterpretResult_FieldNumber) {
  InterpretResult_FieldNumber_Literal = 1,
  InterpretResult_FieldNumber_InterpretationsArray = 2,
  InterpretResult_FieldNumber_Sensitive = 3,
  InterpretResult_FieldNumber_FormattedLiteral = 11,
};

/**
 * *
 * Result of interpretation. Contains the input literal and one or
 * more interpretations. Included in
 * [InterpretResponse](#interpretresponse).
 **/
GPB_FINAL @interface InterpretResult : GPBMessage

/** Literal used for interpretation. For text, this is always the raw input text. For ASR as a Service results, a concatenation of the audio tokens, separated by spaces. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *literal;

/** Repeated. Candidate interpretations of the original input. */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Interpretation*> *interpretationsArray;
/** The number of items in @c interpretationsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger interpretationsArray_Count;

/** Indicates whether the literal contains entities flagged as sensitive. */
@property(nonatomic, readwrite) BOOL sensitive;

/** When InterpretationInput is ASR result, it's the ASR formatted text. When InterpretationInput is text, this is mirroring literal. */
@property(nonatomic, readwrite, copy, null_resettable) NSString *formattedLiteral;

@end

#pragma mark - Interpretation

typedef GPB_ENUM(Interpretation_FieldNumber) {
  Interpretation_FieldNumber_SingleIntentInterpretation = 1,
  Interpretation_FieldNumber_MultiIntentInterpretation = 2,
};

typedef GPB_ENUM(Interpretation_InterpretationUnion_OneOfCase) {
  Interpretation_InterpretationUnion_OneOfCase_GPBUnsetOneOfCase = 0,
  Interpretation_InterpretationUnion_OneOfCase_SingleIntentInterpretation = 1,
  Interpretation_InterpretationUnion_OneOfCase_MultiIntentInterpretation = 2,
};

/**
 * *
 * Candidate interpretation of the input. Included in
 * [InterpretResult](#interpretresult).
 *
 * The type of interpretation is either single- or multi-intent. When
 * requesting an interpretation, use interpretation_result_type in
 * [InterpretationParameters](#interpretationparameters) to specify the
 * desired type.
 *
 * When requesting a multi-intent interpretation with a single-intent
 * semantic model, the root of the multi-intent interpretation object
 * contains the intent.
 *
 * When requesting a single-intent interpretation and the result
 * contains multiple intents, NLU as a Service converts the result to
 * a single-intent interpretation. It does this by returning the
 * breadth-first child of the root of the multi-intent
 * interpretation. For example, if the multi-intent interpretation's
 * root is an AND operator with a child intent PayBill then a child
 * intent GetBalance, NLU as a Service returns a single-intent
 * interpretation for only the PayBill intent.
 **/
GPB_FINAL @interface Interpretation : GPBMessage

@property(nonatomic, readonly) Interpretation_InterpretationUnion_OneOfCase interpretationUnionOneOfCase;

/** The result contains one intent. */
@property(nonatomic, readwrite, strong, null_resettable) SingleIntentInterpretation *singleIntentInterpretation;

/** The result contains multiple intents. This choice requires a multi-intent semantic model, which is not currently supported in Nuance-hosted NLUaaS. */
@property(nonatomic, readwrite, strong, null_resettable) MultiIntentInterpretation *multiIntentInterpretation;

@end

/**
 * Clears whatever value was set for the oneof 'interpretationUnion'.
 **/
void Interpretation_ClearInterpretationUnionOneOfCase(Interpretation *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
